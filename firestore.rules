rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Player profiles - users can read public profiles for discovery
    match /player_profiles/{profileId} {
      allow read: if request.auth != null && resource.data.isPublic == true;
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Coach profiles - users can read public profiles for discovery
    match /coach_profiles/{profileId} {
      allow read: if request.auth != null && resource.data.isPublic == true;
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Chat system - users can read/write chats they're part of
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null &&
        request.auth.uid in request.resource.data.participantIds;
    }
    
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.senderId;
    }
    
    // Matches - users can read matches they're involved in
    match /matches/{matchId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.playerId || 
         request.auth.uid == resource.data.coachId);
    }
    
    // User preferences and settings
    match /userSettings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reports and feedback (write-only for users, admin access needed for reads)
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Admin only in future
    }
    
    // Analytics and metrics (write-only for users)
    match /analytics/{document} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Admin only in future
    }
  }
}